@*@model IEnumerable<CopeyWinery.Models.Task>*@
@model PagedList.IPagedList<CopeyWinery.Models.Task>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

<h2>Administracion de Tareas</h2>



@*@using (Html.BeginForm())*@

@using (Html.BeginForm("Index", "Task", FormMethod.Get))
{
    @Html.ValidationSummary(true, "", new { @class = "text-success" })

    <link href="~/fonts/styles.css" rel="stylesheet" type="text/css">
    if (User.IsInRole("Administrator"))
    {
        @*<p>
                Filtrar por nombre: @Html.TextBox("SearchString")
                Fecha inicial: @Html.Editor("startDate", new { htmlAttributes = new { @class = "date-picker", @readonly = "true" } })
                Fecha final: @Html.Editor("endDate", new { htmlAttributes = new { @class = "date-picker", @readonly = "true" } })
                <input type="submit" value="Filtrar" class=" cancelBottom" />
            </p>*@
        @*<p>
                Nombre: @Html.TextBox("searchString", ViewBag.CurrentFilter as string)
                <input type="submit" value="Filtrar" class=" cancelBottom" />

            </p>*@
    <p>
        @*Find by name: @Html.TextBox("searchString", ViewBag.CurrentFilter as string)*@
        Find by name: @Html.TextBox("searchString")
        @*@Html.ActionLink("Fecha", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })*@
        <input type="submit" value="Search" />
    </p>

        @*<p>
                Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
                <input type="submit" value="Search" />
            </p>*@

        @*<p>
                Inicio: @Html.Editor("startDate", new { htmlAttributes = new { @class = "date-picker", @readonly = "true" } })
            </p>

            <p>
                Final:@Html.Editor("endDate", new { htmlAttributes = new { @class = "date-picker", @readonly = "true" } })
                <input type="submit" value="Filtrar" class=" cancelBottom" />
            </p>*@


    }
}

<p>
    <input type="button" value="Crear Tarea" class="addBottom" onclick="window.location.href='@Url.Action("Add_Num_Hours", "Tasks")'" />
    @if (User.IsInRole("Administrator"))
    {
        <input type="button" value="Exportar a Excel" class="cancelBottom" onclick="window.location.href='@Url.Action("ExportView", "Tasks")'" />

    }
</p>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.ActionLink("Fecha", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })

            </th>
            <th>
                Cant. Horas
            </th>
            <th>
                Tipo de Hora
            </th>
            @*<th>
                    Cantidad
                </th>
                <th>
                    Unidad
                </th>*@
            <th>
                Actividad
            </th>
            <th>
                Labor
            </th>
            @*<th>
                    Calles
                </th>*@
            <th>
                Ubicacion
            </th>
            <th>
                @Html.ActionLink("Colaborador", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })

            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Number_hours)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Hour_type)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Activity.Activity_name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Labor.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Location.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.User.FirstName)
                </td>
                <td>
                    @Html.ActionLink("Editar", "Edit", new { id = item.Task_Id }) |
                    @*@Html.ActionLink("Detalles", "Details", new { id = item.Task_Id }) |*@
                    @Html.ActionLink("Eliminar", "Delete", new { id = item.Task_Id })
                </td>
            </tr>
        }
    </tbody>
</table>

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter}))


@section Scripts {

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")




    <script type="text/javascript">
        $.datepicker.regional['es'] = {
            closeText: 'Cerrar', // set a close button text
            currentText: 'Hoy', // set today text
            monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Setiembre', 'Octubre', 'Noviembre', 'Diciembre'], // set month names
            monthNamesShort: ['Gen', 'Feb', 'Mar', 'Apr', 'Mag', 'Giu', 'Lug', 'Ago', 'Set', 'Ott', 'Nov', 'Dic'], // set short month names
            //dayNames: ['Domenica', 'Luned&#236', 'Marted&#236', 'Mercoled&#236', 'Gioved&#236', 'Venerd&#236', 'Sabato'], // set days names
            //dayNamesShort: ['Dom', 'Lun', 'Mar', 'Mier', 'Jue', 'Vie', 'Sab'], // set short day names
            dayNamesMin: ['Do', 'Lu', 'Ma', 'Me', 'Ju', 'Vi', 'Sa'], // set more short days names
            dateFormat: 'dd/mm/yy' // set format date
        };

        $.datepicker.setDefaults($.datepicker.regional['es']);

        $(".date-picker").datepicker();


                                                /**/</script>

}
