@model CopeyWinery.Models.Task

@{
                /**/

                ViewBag.Title = "Edit";
}

<h2>Editar</h2>
@section Scripts {

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")
    @Scripts.Render("~/bundles/jqueryval")


   <script type="text/javascript">
        $.datepicker.regional['es'] = {
            closeText: 'Cerrar', // set a close button text
            currentText: 'Hoy', // set today text
            monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Setiembre', 'Octubre', 'Noviembre', 'Diciembre'], // set month names
            monthNamesShort: ['Gen', 'Feb', 'Mar', 'Apr', 'Mag', 'Giu', 'Lug', 'Ago', 'Set', 'Ott', 'Nov', 'Dic'], // set short month names
            //dayNames: ['Domenica', 'Luned&#236', 'Marted&#236', 'Mercoled&#236', 'Gioved&#236', 'Venerd&#236', 'Sabato'], // set days names
            //dayNamesShort: ['Dom', 'Lun', 'Mar', 'Mier', 'Jue', 'Vie', 'Sab'], // set short day names
            dayNamesMin: ['Do', 'Lu', 'Ma', 'Me', 'Ju', 'Vi', 'Sa'], // set more short days names
            dateFormat: 'dd/mm/yy' // set format date
        };

        $.datepicker.setDefaults($.datepicker.regional['es']);

        $(".date-picker").datepicker();
    </script>

}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <link href="~/fonts/styles.css" rel="stylesheet" type="text/css">


    <div class="form-horizontal">
        <h4>Tarea</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Name)

        @Html.HiddenFor(model => model.Task_Id)

        <div class="form-group">
            @Html.Label("Fecha", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "date-picker" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group">
            @Html.Label("Cantidad Horas", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Number_hours, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Number_hours, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Tipo de hora", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Hour_type", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Hour_type, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (User.IsInRole("Administrator"))
        {

            <div class="form-group">
                @Html.Label("Colaborador", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("UserId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(model => model.UserId)

        }



        <div class="form-group">
            @Html.Label("Actividad", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Activity_Id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Activity_Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Labor", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Id_labor", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Id_labor, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Labor.Name, htmlAttributes: new { @class = "control-label col-md-2" })*@
            @Html.LabelFor(model => model.Labor.ExtendedAttribute, (string)@ViewBag.Ext_Attr, htmlAttributes: new { @class = "control-label col-md-2" })


            <div class="col-md-10">
                @Html.EditorFor(model => model.Ext_Attr_Labor_Value, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ext_Attr_Labor_Value, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.Label("Ubicacion", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Id_location", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Id_location, "", new { @class = "text-danger" })
            </div>
        </div>


        <link href="~/fonts/styles.css" rel="stylesheet" type="text/css">

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="submitBottom" />
                <input type="button" value="Cancelar" class="cancelBottom" onclick="window.location.href='@Url.Action("Index", "Tasks")'" />
            </div>
        </div>


    </div>
}



